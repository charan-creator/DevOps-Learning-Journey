# Make docker available on jenkins

`$ docker stop <containerid>` --> to stop the container

`$ docker volume ls`

`$ docker run -p 8080:8080 -p 50000:50000 -d =v jenkins_home:/var/jenkins_home -v /var/run/docker.sock;/var/run/docker.sock -v $(which docker): /usr/bin/docker jenkins/jenkins:lts`

`$ chmod 666 /var/run/docker.sock`

push images to docker repository

- configure dockerhub credentials on 

`use secret text(s) or file(s)` under build environment of jenkins to get our globally configured credentials into our job

There was a plugin named `bindings` used for it.

we have to give variable names 'USERNAME' 'PASSWORD'

under build section, have to click on execute shell and then

```
docker build -t <name of the dockerhub repository>:version .
echo $PASSWORD | docker login -u $USERNAME --password-stdin
docker push <dockerhub repository>:version
```

push docker image to a nexus repository

we have to set the insecure registeries at `vim /etc/docker/daemon.json` location of the host

{
"insecure-registries": ["<ip address of nexus repository>:<port for secure connection on nexus>"]

}

systemctl restart docker

have to start jenkins again to get jenkins container id have to go to docker ps -a
docker start <container id>

ls -l /var/run/docker.sock

docker exec -u 0 -it <container id> --> entering container as a root

chmod 666 /var/run/docker.sock


Have to create credentials in jenkins for nexus repo

hostip=nexushost ip

docker build -t <hostip:<port>>/<name of the dockerhub repository>:version .
echo $PASSWORD | docker login -u $USERNAME --password-stdin <hostip:<port>>
docker push <dockerhub repository>:version

